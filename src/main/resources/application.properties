
ui.url=${UI_URL:http://localhost:5173}
spring.application.name=backend
server.port=${PORT:8080}

# MySQL
spring.datasource.url=jdbc:mysql://ballast.proxy.rlwy.net:18293/railway?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Bangkok
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:uYfkqEKyquDsTSOTtPBpZmvUtWhTwGhL}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Hibernate JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# JWT
jwt.secret-key=${JWT_SECRET:12345678901234567890123456789012}

# Mail
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=developer06101990@gmail.com
spring.mail.password=psfz fnto xouu udvo
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.protocol=smtp
spring.mail.properties.mail.debug=true

# Cloudinary
cloudinary.cloud-name=${CLOUDINARY_NAME}
cloudinary.api-key=${CLOUDINARY_KEY}
cloudinary.api-secret=${CLOUDINARY_SECRET}

# File/PDF
pdf.storage.location=${PDF_STORAGE_LOCATION:/tmp/uploads/pdf}
pdf.base.url=${PDF_BASE_URL:http://localhost:8080/api/v1/pdf}
file.upload.dir=${FILE_UPLOAD_DIR:/tmp/uploads}

# Google OAuth2
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs

# GitHub OAuth2
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}
spring.security.oauth2.client.registration.github.scope=user:email
spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/login/oauth2/code/github
spring.security.oauth2.client.registration.github.client-name=github
spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user
spring.security.oauth2.client.provider.github.user-name-attribute=login

server.forward-headers-strategy=native
server.tomcat.remoteip.protocol-header=x-forwarded-proto
server.tomcat.remoteip.remote-ip-header=x-forwarded-for